version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: placement-expo-db-prod
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-placement_expo}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - placement-network
    restart: unless-stopped
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  # Application
  app:
    build: .
    container_name: placement-expo-app-prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:postgresql://postgres:5432/${DATABASE_NAME:-placement_expo}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      APPWRITE_PROJECT_ID: ${APPWRITE_PROJECT_ID}
      APPWRITE_ENDPOINT: ${APPWRITE_ENDPOINT}
      UPLOAD_DIR: /app/uploads
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      SENTRY_DSN: ${SENTRY_DSN:-}
      SSL_ENABLED: ${SSL_ENABLED:-false}
    ports:
      - "8080:8080"
    volumes:
      - upload_data:/app/uploads
      - log_data:/app/logs
      - ./ssl:/app/ssl:ro  # Mount SSL certificates if needed
    depends_on:
      - postgres
    networks:
      - placement-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: placement-expo-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - upload_data:/usr/share/nginx/html/uploads:ro
    depends_on:
      - app
    networks:
      - placement-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  upload_data:
    driver: local
  log_data:
    driver: local

networks:
  placement-network:
    driver: bridge
